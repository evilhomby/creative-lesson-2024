import{_ as a,o as t,c as e,b as s,a as p}from"./app-EAzsM2kq.js";const c={},l=p(`<h1 id="css-簡介" tabindex="-1"><a class="header-anchor" href="#css-簡介"><span>CSS 簡介</span></a></h1><p>串接樣式表 (CSS / Cascading Style Sheets) 的基本語法：<code>選擇器 {屬性: 值;}</code></p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/** 語法 **/</span>
<span class="token selector">selector</span> <span class="token punctuation">{</span>
	<span class="token property">property</span><span class="token punctuation">:</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**實例**/</span>
<span class="token selector">div</span> <span class="token punctuation">{</span>
	<span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
	<span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
	<span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="選擇器的作用與種類" tabindex="-1"><a class="header-anchor" href="#選擇器的作用與種類"><span>選擇器的作用與種類</span></a></h3><div class="custom-container tip"><p class="custom-container-title">重點提示</p><p><strong>選擇器就是選擇「誰」要套用指定樣式的規則</strong></p></div><table><thead><tr><th>種類</th><th>分級</th><th>說明</th></tr></thead><tbody><tr><td>要素選擇器</td><td>D</td><td>body{}、div{}…等，只有要素名稱的情況</td></tr><tr><td>ID選擇器(#)</td><td>B</td><td>#msg 或 div#msg (因為 ID 具唯一性，可以省略前面的要素選擇器)</td></tr><tr><td>Class選擇器(.)</td><td>C</td><td>div.msg 或 .msg (因 Class 具多重性，所以要注意是否有重覆問題)</td></tr><tr><td>屬性選擇器</td><td>C</td><td>input[type=&quot;text&quot;]、div[id=&quot;msg&quot;]、a[class=&quot;lightbox&quot;]</td></tr><tr><td>偽類別</td><td>C</td><td>:hover, :visited, :link, :actived, :foucs</td></tr><tr><td>偽要素</td><td>D</td><td>::before, ::after</td></tr></tbody></table><h3 id="樣式的套用" tabindex="-1"><a class="header-anchor" href="#樣式的套用"><span>樣式的套用</span></a></h3><p>套用共有三種方式：</p><ul><li>外部載入 (external)：<code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;example.css&quot; /&gt;</code></li><li>內部樣式 (internal)：<code>&lt;style type=&quot;text/css&quot;&gt;div{background:red;}&lt;/style&gt;</code></li><li>行內樣式 (inline)：<code>&lt;div style=&quot;background:red;&quot;&gt;&lt;/div&gt;</code></li></ul><p>通常會出現混用的情況：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
	<span class="token selector">div</span> <span class="token punctuation">{</span>
		<span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">重點提示</p><ul><li>外部載入擁有一對多的彈性，實際開發中應該盡量使用外部載入的方式。</li><li>內部樣式可以用於練習或較簡易的網頁製作。</li><li>行內樣式可用於練習，或通常用於程式控制的情況。</li></ul></div><h3 id="css-specificity-優先順序-權重" tabindex="-1"><a class="header-anchor" href="#css-specificity-優先順序-權重"><span>CSS Specificity (優先順序/權重)</span></a></h3><p>當樣式設定遇到衝突或抵觸的情況，依何者的設定為主，規則簡化如下：</p><blockquote><p>!important &gt; inline &gt; 選擇器 &gt; 出現的順序 (internal &amp; external)</p></blockquote><p>可以使用 CSS Specificity 計算器來計算權重：<a href="https://specificity.keegan.st/" target="_blank" rel="noopener noreferrer">Specificity Calculator</a></p><div class="custom-container tip"><p class="custom-container-title">重點提示</p><p>雖然 !important 很好用，但是在實際開發中應該盡量避免使用，因為會造成後續維護的困難。</p></div><p>參考資料</p><p><img src="https://i0.wp.com/muki.tw/wordpress/wp-content/uploads/2015/07/CSS-Specificity-full.png" alt=""></p>`,19),o={class:"custom-container warning"},i=s("p",{class:"custom-container-title"},"練習",-1),u=["href"],d=s("p",null,"請實作出練習參考的效果",-1);function r(n,k){return t(),e("div",null,[l,s("div",o,[i,s("p",null,[s("a",{href:n.$withBase("homework/240312.html"),target:"_blank"},"📝練習參考",8,u)]),d])])}const g=a(c,[["render",r],["__file","css.html.vue"]]);export{g as default};
